name: Publish to Central Repository on Tag

on:
  push:
    tags:
      - 'v*' # 匹配以 'v' 开头的标签，如 v1.0.0

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有历史记录和标签

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: central # Maven中央仓库的server-id
          server-username: MAVEN_USERNAME # 从secrets读取
          server-password: MAVEN_PASSWORD # 从secrets读取

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      #      - name: Verify tag format
      #        run: |
      #          # 验证标签格式是否符合语义化版本控制
      #          if [[ ! ${{ github.ref_name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
      #            echo "Error: Tag ${{ github.ref_name }} does not match expected version format (vX.Y.Z)"
      #            exit 1
      #          fi

      - name: Build and publish
        run: |
          # 移除标签前缀 'v' 以获取版本号
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Publishing version: $VERSION"
          
          # 使用Maven发布
          mvn -B versions:set -DnewVersion=$VERSION
          mvn -B clean deploy \
            -Dmaven.test.skip=true \
            -Dgpg.passphrase=$GPG_PASSPHRASE
          
          echo "Publication completed for version $VERSION"
        
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Setup GPG
        if: env.GPG_PRIVATE_KEY
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG