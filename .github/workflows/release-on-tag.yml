name: Publish to Central Repository on Tag

on:
  push:
    tags:
      - 'v*' # 匹配以 'v' 开头的标签，如 v1.0.0

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GNUPG2
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg2

      - name: Setup GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "$GPG_PRIVATE_KEY" | gpg2 --batch --import
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpg-connect-agent reloadagent /bye
          gpg2 --list-secret-keys --keyid-format LONG

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: central
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build and publish
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Publishing version: $VERSION"
          
          mvn -B versions:set -DnewVersion=$VERSION
          
          echo "mvn -B clean deploy \
            -Dmaven.test.skip=true \
            -Dgpg.executable=gpg2 \
            -Dgpg.homedir=$HOME/.gnupg \
            -Dgpg.passphrase=$GPG_PASSPHRASE \
            -Dossrh.username=$OSSRH_USERNAME \
            -Dossrh.password=$OSSRH_TOKEN"
          
          mvn -B clean deploy \
            -Dmaven.test.skip=true \
            -Dgpg.executable=gpg2 \
            -Dgpg.homedir=$HOME/.gnupg \
            -Dgpg.passphrase=$GPG_PASSPHRASE \
            -Dossrh.username=$OSSRH_USERNAME \
            -Dossrh.password=$OSSRH_TOKEN